@using Volo.Abp.UI.Navigation
@model ApplicationMenu

@foreach (var menuItem in Model.Items)
{
    var elementId = string.IsNullOrEmpty(menuItem.ElementId) ? string.Empty : $"id=\"{menuItem.ElementId}\"";
    var cssClass = string.IsNullOrEmpty(menuItem.CssClass) ? string.Empty : menuItem.CssClass;
    var disabled = menuItem.IsDisabled ? "disabled" : string.Empty;
    var url = string.IsNullOrEmpty(menuItem.Url) ? "#" : Url.Content(menuItem.Url);
    if (menuItem.IsLeaf)
    {
        if (menuItem.Url != null)
        {
            <li class="hover:bg-gray-700 hover:text-white @cssClass @disabled" @elementId>
                <a class="relative block py-6 px-2 lg:p-6 text-sm lg:text-base font-bold" href="@url" target="@menuItem.Target">
                    @if (menuItem.Icon != null)
                    {
                        if (menuItem.Icon.StartsWith("fa"))
                        {
                            <i class="@menuItem.Icon"></i>
                        }
                    }
                    @menuItem.DisplayName
                </a>
            </li>
        }
    }
    else
    {
        <!--Regular Link-->
        <li class="toggleable hover:bg-gray-700 hover:text-white">
            <input type="checkbox" value="selected" id="toggle-one" class="toggle-input">
            <label for="toggle-one" class="block cursor-pointer py-6 px-4 lg:p-6 text-sm lg:text-base font-bold" aria-labelledby="Menu_@(menuItem.Name)">
                @if (menuItem.Icon != null)
                {
                    if (menuItem.Icon.StartsWith("fa"))
                    {
                        <i class="@menuItem.Icon"></i>
                    }
                }
                @menuItem.DisplayName
            </label>
            <div class="p-6 mega-menu mb-16 sm:mb-0 shadow-xl bg-gray-700 z-50">
                <div class="container mx-auto w-full flex flex-wrap justify-between mx-2">
                    @foreach (var childMenuItem in menuItem.Items)
                    {
                        <ul class="px-4 w-full sm:w-1/2 lg:w-1/4 border-gray-600 border-b sm:border-r lg:border-b-0 pb-6 pt-6 lg:pt-3">
                            @await Html.PartialAsync("~/Themes/Basic/Components/Menu/_MenuItem.cshtml", childMenuItem)
                        </ul>
                    }
                </div>
            </div>
        </li>
    }
}
